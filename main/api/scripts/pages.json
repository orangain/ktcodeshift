[{"name":"class CLI(process: (CLIArgs) -> Unit) : Callable<Int?> ","description":"ktcodeshift.CLI","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/index.html","searchKeys":["CLI","class CLI(process: (CLIArgs) -> Unit) : Callable<Int?> ","ktcodeshift.CLI"]},{"name":"class VersionProvider : CommandLine.IVersionProvider","description":"ktcodeshift.VersionProvider","location":"ktcodeshift-cli/ktcodeshift/-version-provider/index.html","searchKeys":["VersionProvider","class VersionProvider : CommandLine.IVersionProvider","ktcodeshift.VersionProvider"]},{"name":"constructor()","description":"ktcodeshift.VersionProvider.VersionProvider","location":"ktcodeshift-cli/ktcodeshift/-version-provider/-version-provider.html","searchKeys":["VersionProvider","constructor()","ktcodeshift.VersionProvider.VersionProvider"]},{"name":"constructor(process: (CLIArgs) -> Unit)","description":"ktcodeshift.CLI.CLI","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/-c-l-i.html","searchKeys":["CLI","constructor(process: (CLIArgs) -> Unit)","ktcodeshift.CLI.CLI"]},{"name":"constructor(transformFile: File, targetDirs: List<File>, dryRun: Boolean, extensions: Set<String>)","description":"ktcodeshift.CLIArgs.CLIArgs","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/-c-l-i-args.html","searchKeys":["CLIArgs","constructor(transformFile: File, targetDirs: List<File>, dryRun: Boolean, extensions: Set<String>)","ktcodeshift.CLIArgs.CLIArgs"]},{"name":"data class CLIArgs(val transformFile: File, val targetDirs: List<File>, val dryRun: Boolean, val extensions: Set<String>)","description":"ktcodeshift.CLIArgs","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/index.html","searchKeys":["CLIArgs","data class CLIArgs(val transformFile: File, val targetDirs: List<File>, val dryRun: Boolean, val extensions: Set<String>)","ktcodeshift.CLIArgs"]},{"name":"fun main(args: Array<String>)","description":"ktcodeshift.main","location":"ktcodeshift-cli/ktcodeshift/main.html","searchKeys":["main","fun main(args: Array<String>)","ktcodeshift.main"]},{"name":"lateinit var targetDirs: Array<File>","description":"ktcodeshift.CLI.targetDirs","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/target-dirs.html","searchKeys":["targetDirs","lateinit var targetDirs: Array<File>","ktcodeshift.CLI.targetDirs"]},{"name":"lateinit var transformFile: File","description":"ktcodeshift.CLI.transformFile","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/transform-file.html","searchKeys":["transformFile","lateinit var transformFile: File","ktcodeshift.CLI.transformFile"]},{"name":"open override fun call(): Int","description":"ktcodeshift.CLI.call","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/call.html","searchKeys":["call","open override fun call(): Int","ktcodeshift.CLI.call"]},{"name":"open override fun getVersion(): Array<String>","description":"ktcodeshift.VersionProvider.getVersion","location":"ktcodeshift-cli/ktcodeshift/-version-provider/get-version.html","searchKeys":["getVersion","open override fun getVersion(): Array<String>","ktcodeshift.VersionProvider.getVersion"]},{"name":"val dryRun: Boolean","description":"ktcodeshift.CLIArgs.dryRun","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/dry-run.html","searchKeys":["dryRun","val dryRun: Boolean","ktcodeshift.CLIArgs.dryRun"]},{"name":"val extensions: Set<String>","description":"ktcodeshift.CLIArgs.extensions","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/extensions.html","searchKeys":["extensions","val extensions: Set<String>","ktcodeshift.CLIArgs.extensions"]},{"name":"val targetDirs: List<File>","description":"ktcodeshift.CLIArgs.targetDirs","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/target-dirs.html","searchKeys":["targetDirs","val targetDirs: List<File>","ktcodeshift.CLIArgs.targetDirs"]},{"name":"val transformFile: File","description":"ktcodeshift.CLIArgs.transformFile","location":"ktcodeshift-cli/ktcodeshift/-c-l-i-args/transform-file.html","searchKeys":["transformFile","val transformFile: File","ktcodeshift.CLIArgs.transformFile"]},{"name":"var dryRun: Boolean","description":"ktcodeshift.CLI.dryRun","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/dry-run.html","searchKeys":["dryRun","var dryRun: Boolean","ktcodeshift.CLI.dryRun"]},{"name":"var extensions: String","description":"ktcodeshift.CLI.extensions","location":"ktcodeshift-cli/ktcodeshift/-c-l-i/extensions.html","searchKeys":["extensions","var extensions: String","ktcodeshift.CLI.extensions"]},{"name":"abstract class TransformScript","description":"ktcodeshift.script.TransformScript","location":"ktcodeshift-dsl/ktcodeshift.script/-transform-script/index.html","searchKeys":["TransformScript","abstract class TransformScript","ktcodeshift.script.TransformScript"]},{"name":"abstract val path: Path","description":"ktcodeshift.FileInfo.path","location":"ktcodeshift-dsl/ktcodeshift/-file-info/path.html","searchKeys":["path","abstract val path: Path","ktcodeshift.FileInfo.path"]},{"name":"abstract val source: String","description":"ktcodeshift.FileInfo.source","location":"ktcodeshift-dsl/ktcodeshift/-file-info/source.html","searchKeys":["source","abstract val source: String","ktcodeshift.FileInfo.source"]},{"name":"class NodeContext(path: NodePath<*>)","description":"ktcodeshift.NodeContext","location":"ktcodeshift-dsl/ktcodeshift/-node-context/index.html","searchKeys":["NodeContext","class NodeContext(path: NodePath<*>)","ktcodeshift.NodeContext"]},{"name":"constructor()","description":"ktcodeshift.script.TransformScript.TransformScript","location":"ktcodeshift-dsl/ktcodeshift.script/-transform-script/-transform-script.html","searchKeys":["TransformScript","constructor()","ktcodeshift.script.TransformScript.TransformScript"]},{"name":"constructor(nodePaths: List<NodePath<T>>, rootNode: Node.KotlinEntry)","description":"ktcodeshift.NodeCollection.NodeCollection","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/-node-collection.html","searchKeys":["NodeCollection","constructor(nodePaths: List<NodePath<T>>, rootNode: Node.KotlinEntry)","ktcodeshift.NodeCollection.NodeCollection"]},{"name":"constructor(path: NodePath<*>)","description":"ktcodeshift.NodeContext.NodeContext","location":"ktcodeshift-dsl/ktcodeshift/-node-context/-node-context.html","searchKeys":["NodeContext","constructor(path: NodePath<*>)","ktcodeshift.NodeContext.NodeContext"]},{"name":"data class NodeCollection<T : Node>(val nodePaths: List<NodePath<T>>, val rootNode: Node.KotlinEntry)","description":"ktcodeshift.NodeCollection","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/index.html","searchKeys":["NodeCollection","data class NodeCollection<T : Node>(val nodePaths: List<NodePath<T>>, val rootNode: Node.KotlinEntry)","ktcodeshift.NodeCollection"]},{"name":"fun <S> map(transform: NodeContext.(T) -> S): List<S>","description":"ktcodeshift.NodeCollection.map","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/map.html","searchKeys":["map","fun <S> map(transform: NodeContext.(T) -> S): List<S>","ktcodeshift.NodeCollection.map"]},{"name":"fun <S> mapIndexed(transform: NodeContext.(Int, T) -> S): List<S>","description":"ktcodeshift.NodeCollection.mapIndexed","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/map-indexed.html","searchKeys":["mapIndexed","fun <S> mapIndexed(transform: NodeContext.(Int, T) -> S): List<S>","ktcodeshift.NodeCollection.mapIndexed"]},{"name":"fun <T : Node> Node.KotlinEntry.find(javaClass: Class<T>): NodeCollection<T>","description":"ktcodeshift.find","location":"ktcodeshift-dsl/ktcodeshift/find.html","searchKeys":["find","fun <T : Node> Node.KotlinEntry.find(javaClass: Class<T>): NodeCollection<T>","ktcodeshift.find"]},{"name":"fun <T : Node> Node.KotlinEntry.find(kClass: KClass<T>): NodeCollection<T>","description":"ktcodeshift.find","location":"ktcodeshift-dsl/ktcodeshift/find.html","searchKeys":["find","fun <T : Node> Node.KotlinEntry.find(kClass: KClass<T>): NodeCollection<T>","ktcodeshift.find"]},{"name":"fun Node.toSource(): String","description":"ktcodeshift.toSource","location":"ktcodeshift-dsl/ktcodeshift/to-source.html","searchKeys":["toSource","fun Node.toSource(): String","ktcodeshift.toSource"]},{"name":"fun annotatedExpression(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), statement: Node.Statement, supplement: NodeSupplement = NodeSupplement()): Node.Expression.AnnotatedExpression","description":"ktcodeshift.annotatedExpression","location":"ktcodeshift-dsl/ktcodeshift/annotated-expression.html","searchKeys":["annotatedExpression","fun annotatedExpression(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), statement: Node.Statement, supplement: NodeSupplement = NodeSupplement()): Node.Expression.AnnotatedExpression","ktcodeshift.annotatedExpression"]},{"name":"fun annotation(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, supplement: NodeSupplement = NodeSupplement()): Node.Modifier.AnnotationSet.Annotation","description":"ktcodeshift.annotation","location":"ktcodeshift-dsl/ktcodeshift/annotation.html","searchKeys":["annotation","fun annotation(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, supplement: NodeSupplement = NodeSupplement()): Node.Modifier.AnnotationSet.Annotation","ktcodeshift.annotation"]},{"name":"fun annotationSet(target: Node.Modifier.AnnotationSet.AnnotationTarget? = null, lBracket: Node.Keyword.LBracket? = null, annotations: List<Node.Modifier.AnnotationSet.Annotation> = listOf(), rBracket: Node.Keyword.RBracket? = null, supplement: NodeSupplement = NodeSupplement()): Node.Modifier.AnnotationSet","description":"ktcodeshift.annotationSet","location":"ktcodeshift-dsl/ktcodeshift/annotation-set.html","searchKeys":["annotationSet","fun annotationSet(target: Node.Modifier.AnnotationSet.AnnotationTarget? = null, lBracket: Node.Keyword.LBracket? = null, annotations: List<Node.Modifier.AnnotationSet.Annotation> = listOf(), rBracket: Node.Keyword.RBracket? = null, supplement: NodeSupplement = NodeSupplement()): Node.Modifier.AnnotationSet","ktcodeshift.annotationSet"]},{"name":"fun anonymousFunctionExpression(function: Node.Declaration.FunctionDeclaration, supplement: NodeSupplement = NodeSupplement()): Node.Expression.AnonymousFunctionExpression","description":"ktcodeshift.anonymousFunctionExpression","location":"ktcodeshift-dsl/ktcodeshift/anonymous-function-expression.html","searchKeys":["anonymousFunctionExpression","fun anonymousFunctionExpression(function: Node.Declaration.FunctionDeclaration, supplement: NodeSupplement = NodeSupplement()): Node.Expression.AnonymousFunctionExpression","ktcodeshift.anonymousFunctionExpression"]},{"name":"fun binaryExpression(lhs: Node.Expression, operator: Node.Expression.BinaryExpression.BinaryOperator, rhs: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BinaryExpression","description":"ktcodeshift.binaryExpression","location":"ktcodeshift-dsl/ktcodeshift/binary-expression.html","searchKeys":["binaryExpression","fun binaryExpression(lhs: Node.Expression, operator: Node.Expression.BinaryExpression.BinaryOperator, rhs: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BinaryExpression","ktcodeshift.binaryExpression"]},{"name":"fun binaryTypeExpression(lhs: Node.Expression, operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, rhs: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BinaryTypeExpression","description":"ktcodeshift.binaryTypeExpression","location":"ktcodeshift-dsl/ktcodeshift/binary-type-expression.html","searchKeys":["binaryTypeExpression","fun binaryTypeExpression(lhs: Node.Expression, operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, rhs: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BinaryTypeExpression","ktcodeshift.binaryTypeExpression"]},{"name":"fun blockExpression(statements: List<Node.Statement> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.BlockExpression","description":"ktcodeshift.blockExpression","location":"ktcodeshift-dsl/ktcodeshift/block-expression.html","searchKeys":["blockExpression","fun blockExpression(statements: List<Node.Statement> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.BlockExpression","ktcodeshift.blockExpression"]},{"name":"fun blockExpression(vararg statements: Node.Statement): Node.Expression.BlockExpression","description":"ktcodeshift.blockExpression","location":"ktcodeshift-dsl/ktcodeshift/block-expression.html","searchKeys":["blockExpression","fun blockExpression(vararg statements: Node.Statement): Node.Expression.BlockExpression","ktcodeshift.blockExpression"]},{"name":"fun booleanLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BooleanLiteralExpression","description":"ktcodeshift.booleanLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/boolean-literal-expression.html","searchKeys":["booleanLiteralExpression","fun booleanLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BooleanLiteralExpression","ktcodeshift.booleanLiteralExpression"]},{"name":"fun breakExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BreakExpression","description":"ktcodeshift.breakExpression","location":"ktcodeshift-dsl/ktcodeshift/break-expression.html","searchKeys":["breakExpression","fun breakExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.BreakExpression","ktcodeshift.breakExpression"]},{"name":"fun callExpression(calleeExpression: Node.Expression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, lambdaArgument: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CallExpression","description":"ktcodeshift.callExpression","location":"ktcodeshift-dsl/ktcodeshift/call-expression.html","searchKeys":["callExpression","fun callExpression(calleeExpression: Node.Expression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, lambdaArgument: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CallExpression","ktcodeshift.callExpression"]},{"name":"fun callableReferenceExpression(lhs: Node.Expression? = null, questionMarks: List<Node.Keyword.Question> = listOf(), rhs: Node.Expression.NameExpression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CallableReferenceExpression","description":"ktcodeshift.callableReferenceExpression","location":"ktcodeshift-dsl/ktcodeshift/callable-reference-expression.html","searchKeys":["callableReferenceExpression","fun callableReferenceExpression(lhs: Node.Expression? = null, questionMarks: List<Node.Keyword.Question> = listOf(), rhs: Node.Expression.NameExpression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CallableReferenceExpression","ktcodeshift.callableReferenceExpression"]},{"name":"fun catchClause(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), block: Node.Expression.BlockExpression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.TryExpression.CatchClause","description":"ktcodeshift.catchClause","location":"ktcodeshift-dsl/ktcodeshift/catch-clause.html","searchKeys":["catchClause","fun catchClause(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), block: Node.Expression.BlockExpression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.TryExpression.CatchClause","ktcodeshift.catchClause"]},{"name":"fun characterLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CharacterLiteralExpression","description":"ktcodeshift.characterLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/character-literal-expression.html","searchKeys":["characterLiteralExpression","fun characterLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.CharacterLiteralExpression","ktcodeshift.characterLiteralExpression"]},{"name":"fun classBody(enumEntries: List<Node.Declaration.ClassOrObject.ClassBody.EnumEntry> = listOf(), declarations: List<Node.Declaration> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody","description":"ktcodeshift.classBody","location":"ktcodeshift-dsl/ktcodeshift/class-body.html","searchKeys":["classBody","fun classBody(enumEntries: List<Node.Declaration.ClassOrObject.ClassBody.EnumEntry> = listOf(), declarations: List<Node.Declaration> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody","ktcodeshift.classBody"]},{"name":"fun classDeclaration(modifiers: List<Node.Modifier> = listOf(), declarationKeyword: Node.Declaration.ClassDeclaration.ClassOrInterfaceKeyword, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor? = null, parents: List<Node.Declaration.ClassOrObject.ClassParent> = listOf(), typeConstraintSet: Node.PostModifier.TypeConstraintSet? = null, body: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassDeclaration","description":"ktcodeshift.classDeclaration","location":"ktcodeshift-dsl/ktcodeshift/class-declaration.html","searchKeys":["classDeclaration","fun classDeclaration(modifiers: List<Node.Modifier> = listOf(), declarationKeyword: Node.Declaration.ClassDeclaration.ClassOrInterfaceKeyword, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor? = null, parents: List<Node.Declaration.ClassOrObject.ClassParent> = listOf(), typeConstraintSet: Node.PostModifier.TypeConstraintSet? = null, body: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassDeclaration","ktcodeshift.classDeclaration"]},{"name":"fun classLiteralExpression(lhs: Node.Expression, questionMarks: List<Node.Keyword.Question> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.ClassLiteralExpression","description":"ktcodeshift.classLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/class-literal-expression.html","searchKeys":["classLiteralExpression","fun classLiteralExpression(lhs: Node.Expression, questionMarks: List<Node.Keyword.Question> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.ClassLiteralExpression","ktcodeshift.classLiteralExpression"]},{"name":"fun collectionLiteralExpression(expressions: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.CollectionLiteralExpression","description":"ktcodeshift.collectionLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/collection-literal-expression.html","searchKeys":["collectionLiteralExpression","fun collectionLiteralExpression(expressions: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.CollectionLiteralExpression","ktcodeshift.collectionLiteralExpression"]},{"name":"fun comment(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Extra.Comment","description":"ktcodeshift.comment","location":"ktcodeshift-dsl/ktcodeshift/comment.html","searchKeys":["comment","fun comment(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Extra.Comment","ktcodeshift.comment"]},{"name":"fun conditionalWhenBranch(conditions: List<Node.Expression.WhenExpression.WhenCondition> = listOf(), arrow: Node.Keyword.Arrow = Node.Keyword.Arrow(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ConditionalWhenBranch","description":"ktcodeshift.conditionalWhenBranch","location":"ktcodeshift-dsl/ktcodeshift/conditional-when-branch.html","searchKeys":["conditionalWhenBranch","fun conditionalWhenBranch(conditions: List<Node.Expression.WhenExpression.WhenCondition> = listOf(), arrow: Node.Keyword.Arrow = Node.Keyword.Arrow(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ConditionalWhenBranch","ktcodeshift.conditionalWhenBranch"]},{"name":"fun configureMavenDepsOnAnnotations(context: ScriptConfigurationRefinementContext): ResultWithDiagnostics<ScriptCompilationConfiguration>","description":"ktcodeshift.script.configureMavenDepsOnAnnotations","location":"ktcodeshift-dsl/ktcodeshift.script/configure-maven-deps-on-annotations.html","searchKeys":["configureMavenDepsOnAnnotations","fun configureMavenDepsOnAnnotations(context: ScriptConfigurationRefinementContext): ResultWithDiagnostics<ScriptCompilationConfiguration>","ktcodeshift.script.configureMavenDepsOnAnnotations"]},{"name":"fun constructorClassParent(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ConstructorClassParent","description":"ktcodeshift.constructorClassParent","location":"ktcodeshift-dsl/ktcodeshift/constructor-class-parent.html","searchKeys":["constructorClassParent","fun constructorClassParent(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ConstructorClassParent","ktcodeshift.constructorClassParent"]},{"name":"fun contextReceiver(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), receiverTypes: List<Node.Type> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.ContextReceiver","description":"ktcodeshift.contextReceiver","location":"ktcodeshift-dsl/ktcodeshift/context-receiver.html","searchKeys":["contextReceiver","fun contextReceiver(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), receiverTypes: List<Node.Type> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.ContextReceiver","ktcodeshift.contextReceiver"]},{"name":"fun continueExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ContinueExpression","description":"ktcodeshift.continueExpression","location":"ktcodeshift-dsl/ktcodeshift/continue-expression.html","searchKeys":["continueExpression","fun continueExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ContinueExpression","ktcodeshift.continueExpression"]},{"name":"fun contract(lBracket: Node.Keyword.LBracket = Node.Keyword.LBracket(), contractEffects: List<Node.Expression> = listOf(), rBracket: Node.Keyword.RBracket = Node.Keyword.RBracket(), supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.Contract","description":"ktcodeshift.contract","location":"ktcodeshift-dsl/ktcodeshift/contract.html","searchKeys":["contract","fun contract(lBracket: Node.Keyword.LBracket = Node.Keyword.LBracket(), contractEffects: List<Node.Expression> = listOf(), rBracket: Node.Keyword.RBracket = Node.Keyword.RBracket(), supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.Contract","ktcodeshift.contract"]},{"name":"fun delegationClassParent(type: Node.Type, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.DelegationClassParent","description":"ktcodeshift.delegationClassParent","location":"ktcodeshift-dsl/ktcodeshift/delegation-class-parent.html","searchKeys":["delegationClassParent","fun delegationClassParent(type: Node.Type, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.DelegationClassParent","ktcodeshift.delegationClassParent"]},{"name":"fun doWhileStatement(body: Node.Expression, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Statement.DoWhileStatement","description":"ktcodeshift.doWhileStatement","location":"ktcodeshift-dsl/ktcodeshift/do-while-statement.html","searchKeys":["doWhileStatement","fun doWhileStatement(body: Node.Expression, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Statement.DoWhileStatement","ktcodeshift.doWhileStatement"]},{"name":"fun dynamicType(modifiers: List<Node.Modifier> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Type.DynamicType","description":"ktcodeshift.dynamicType","location":"ktcodeshift-dsl/ktcodeshift/dynamic-type.html","searchKeys":["dynamicType","fun dynamicType(modifiers: List<Node.Modifier> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Type.DynamicType","ktcodeshift.dynamicType"]},{"name":"fun elseWhenBranch(arrow: Node.Keyword.Arrow = Node.Keyword.Arrow(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ElseWhenBranch","description":"ktcodeshift.elseWhenBranch","location":"ktcodeshift-dsl/ktcodeshift/else-when-branch.html","searchKeys":["elseWhenBranch","fun elseWhenBranch(arrow: Node.Keyword.Arrow = Node.Keyword.Arrow(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ElseWhenBranch","ktcodeshift.elseWhenBranch"]},{"name":"fun enumEntry(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, classBody: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.EnumEntry","description":"ktcodeshift.enumEntry","location":"ktcodeshift-dsl/ktcodeshift/enum-entry.html","searchKeys":["enumEntry","fun enumEntry(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, lPar: Node.Keyword.LPar? = null, arguments: List<Node.ValueArgument> = listOf(), rPar: Node.Keyword.RPar? = null, classBody: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.EnumEntry","ktcodeshift.enumEntry"]},{"name":"fun escapeStringEntry(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.EscapeStringEntry","description":"ktcodeshift.escapeStringEntry","location":"ktcodeshift-dsl/ktcodeshift/escape-string-entry.html","searchKeys":["escapeStringEntry","fun escapeStringEntry(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.EscapeStringEntry","ktcodeshift.escapeStringEntry"]},{"name":"fun expressionWhenCondition(expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ExpressionWhenCondition","description":"ktcodeshift.expressionWhenCondition","location":"ktcodeshift-dsl/ktcodeshift/expression-when-condition.html","searchKeys":["expressionWhenCondition","fun expressionWhenCondition(expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.ExpressionWhenCondition","ktcodeshift.expressionWhenCondition"]},{"name":"fun filter(predicate: NodeContext.(T) -> Boolean): NodeCollection<T>","description":"ktcodeshift.NodeCollection.filter","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/filter.html","searchKeys":["filter","fun filter(predicate: NodeContext.(T) -> Boolean): NodeCollection<T>","ktcodeshift.NodeCollection.filter"]},{"name":"fun filterIndexed(predicate: NodeContext.(Int, T) -> Boolean): NodeCollection<T>","description":"ktcodeshift.NodeCollection.filterIndexed","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/filter-indexed.html","searchKeys":["filterIndexed","fun filterIndexed(predicate: NodeContext.(Int, T) -> Boolean): NodeCollection<T>","ktcodeshift.NodeCollection.filterIndexed"]},{"name":"fun forStatement(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), loopParameter: Node.LambdaParameter, inKeyword: Node.Keyword.In = Node.Keyword.In(), loopRange: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Statement.ForStatement","description":"ktcodeshift.forStatement","location":"ktcodeshift-dsl/ktcodeshift/for-statement.html","searchKeys":["forStatement","fun forStatement(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), loopParameter: Node.LambdaParameter, inKeyword: Node.Keyword.In = Node.Keyword.In(), loopRange: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Statement.ForStatement","ktcodeshift.forStatement"]},{"name":"fun functionDeclaration(modifiers: List<Node.Modifier> = listOf(), lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, receiverType: Node.Type? = null, name: Node.Expression.NameExpression? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), returnType: Node.Type? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.FunctionDeclaration","description":"ktcodeshift.functionDeclaration","location":"ktcodeshift-dsl/ktcodeshift/function-declaration.html","searchKeys":["functionDeclaration","fun functionDeclaration(modifiers: List<Node.Modifier> = listOf(), lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, receiverType: Node.Type? = null, name: Node.Expression.NameExpression? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), returnType: Node.Type? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.FunctionDeclaration","ktcodeshift.functionDeclaration"]},{"name":"fun functionParameter(modifiers: List<Node.Modifier> = listOf(), valOrVarKeyword: Node.Keyword.ValOrVarKeyword? = null, name: Node.Expression.NameExpression, type: Node.Type? = null, defaultValue: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.FunctionParameter","description":"ktcodeshift.functionParameter","location":"ktcodeshift-dsl/ktcodeshift/function-parameter.html","searchKeys":["functionParameter","fun functionParameter(modifiers: List<Node.Modifier> = listOf(), valOrVarKeyword: Node.Keyword.ValOrVarKeyword? = null, name: Node.Expression.NameExpression, type: Node.Type? = null, defaultValue: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.FunctionParameter","ktcodeshift.functionParameter"]},{"name":"fun functionType(modifiers: List<Node.Modifier> = listOf(), contextReceiver: Node.ContextReceiver? = null, receiverType: Node.Type? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.Type.FunctionType.FunctionTypeParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), returnType: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Type.FunctionType","description":"ktcodeshift.functionType","location":"ktcodeshift-dsl/ktcodeshift/function-type.html","searchKeys":["functionType","fun functionType(modifiers: List<Node.Modifier> = listOf(), contextReceiver: Node.ContextReceiver? = null, receiverType: Node.Type? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.Type.FunctionType.FunctionTypeParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), returnType: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Type.FunctionType","ktcodeshift.functionType"]},{"name":"fun functionTypeParameter(name: Node.Expression.NameExpression? = null, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Type.FunctionType.FunctionTypeParameter","description":"ktcodeshift.functionTypeParameter","location":"ktcodeshift-dsl/ktcodeshift/function-type-parameter.html","searchKeys":["functionTypeParameter","fun functionTypeParameter(name: Node.Expression.NameExpression? = null, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Type.FunctionType.FunctionTypeParameter","ktcodeshift.functionTypeParameter"]},{"name":"fun getter(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar? = null, rPar: Node.Keyword.RPar? = null, type: Node.Type? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration.Getter","description":"ktcodeshift.getter","location":"ktcodeshift-dsl/ktcodeshift/getter.html","searchKeys":["getter","fun getter(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar? = null, rPar: Node.Keyword.RPar? = null, type: Node.Type? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration.Getter","ktcodeshift.getter"]},{"name":"fun ifExpression(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, elseBody: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.IfExpression","description":"ktcodeshift.ifExpression","location":"ktcodeshift-dsl/ktcodeshift/if-expression.html","searchKeys":["ifExpression","fun ifExpression(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, elseBody: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.IfExpression","ktcodeshift.ifExpression"]},{"name":"fun importDirective(names: List<Node.Expression.NameExpression> = listOf(), aliasName: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.ImportDirective","description":"ktcodeshift.importDirective","location":"ktcodeshift-dsl/ktcodeshift/import-directive.html","searchKeys":["importDirective","fun importDirective(names: List<Node.Expression.NameExpression> = listOf(), aliasName: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.ImportDirective","ktcodeshift.importDirective"]},{"name":"fun indexedAccessExpression(expression: Node.Expression, indices: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.IndexedAccessExpression","description":"ktcodeshift.indexedAccessExpression","location":"ktcodeshift-dsl/ktcodeshift/indexed-access-expression.html","searchKeys":["indexedAccessExpression","fun indexedAccessExpression(expression: Node.Expression, indices: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.IndexedAccessExpression","ktcodeshift.indexedAccessExpression"]},{"name":"fun initializer(block: Node.Expression.BlockExpression, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.Initializer","description":"ktcodeshift.initializer","location":"ktcodeshift-dsl/ktcodeshift/initializer.html","searchKeys":["initializer","fun initializer(block: Node.Expression.BlockExpression, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.Initializer","ktcodeshift.initializer"]},{"name":"fun integerLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.IntegerLiteralExpression","description":"ktcodeshift.integerLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/integer-literal-expression.html","searchKeys":["integerLiteralExpression","fun integerLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.IntegerLiteralExpression","ktcodeshift.integerLiteralExpression"]},{"name":"fun kotlinFile(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), packageDirective: Node.PackageDirective? = null, importDirectives: List<Node.ImportDirective> = listOf(), declarations: List<Node.Declaration> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.KotlinFile","description":"ktcodeshift.kotlinFile","location":"ktcodeshift-dsl/ktcodeshift/kotlin-file.html","searchKeys":["kotlinFile","fun kotlinFile(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), packageDirective: Node.PackageDirective? = null, importDirectives: List<Node.ImportDirective> = listOf(), declarations: List<Node.Declaration> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.KotlinFile","ktcodeshift.kotlinFile"]},{"name":"fun kotlinScript(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), packageDirective: Node.PackageDirective? = null, importDirectives: List<Node.ImportDirective> = listOf(), expressions: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.KotlinScript","description":"ktcodeshift.kotlinScript","location":"ktcodeshift-dsl/ktcodeshift/kotlin-script.html","searchKeys":["kotlinScript","fun kotlinScript(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), packageDirective: Node.PackageDirective? = null, importDirectives: List<Node.ImportDirective> = listOf(), expressions: List<Node.Expression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.KotlinScript","ktcodeshift.kotlinScript"]},{"name":"fun labeledExpression(label: Node.Expression.NameExpression, statement: Node.Statement, supplement: NodeSupplement = NodeSupplement()): Node.Expression.LabeledExpression","description":"ktcodeshift.labeledExpression","location":"ktcodeshift-dsl/ktcodeshift/labeled-expression.html","searchKeys":["labeledExpression","fun labeledExpression(label: Node.Expression.NameExpression, statement: Node.Statement, supplement: NodeSupplement = NodeSupplement()): Node.Expression.LabeledExpression","ktcodeshift.labeledExpression"]},{"name":"fun lambdaExpression(parameters: List<Node.LambdaParameter> = listOf(), arrow: Node.Keyword.Arrow? = null, statements: List<Node.Statement> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.LambdaExpression","description":"ktcodeshift.lambdaExpression","location":"ktcodeshift-dsl/ktcodeshift/lambda-expression.html","searchKeys":["lambdaExpression","fun lambdaExpression(parameters: List<Node.LambdaParameter> = listOf(), arrow: Node.Keyword.Arrow? = null, statements: List<Node.Statement> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.LambdaExpression","ktcodeshift.lambdaExpression"]},{"name":"fun lambdaParameter(lPar: Node.Keyword.LPar? = null, variables: List<Node.Variable> = listOf(), rPar: Node.Keyword.RPar? = null, destructuringType: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.LambdaParameter","description":"ktcodeshift.lambdaParameter","location":"ktcodeshift-dsl/ktcodeshift/lambda-parameter.html","searchKeys":["lambdaParameter","fun lambdaParameter(lPar: Node.Keyword.LPar? = null, variables: List<Node.Variable> = listOf(), rPar: Node.Keyword.RPar? = null, destructuringType: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.LambdaParameter","ktcodeshift.lambdaParameter"]},{"name":"fun literalStringEntry(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.LiteralStringEntry","description":"ktcodeshift.literalStringEntry","location":"ktcodeshift-dsl/ktcodeshift/literal-string-entry.html","searchKeys":["literalStringEntry","fun literalStringEntry(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.LiteralStringEntry","ktcodeshift.literalStringEntry"]},{"name":"fun nameExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.NameExpression","description":"ktcodeshift.nameExpression","location":"ktcodeshift-dsl/ktcodeshift/name-expression.html","searchKeys":["nameExpression","fun nameExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.NameExpression","ktcodeshift.nameExpression"]},{"name":"fun nullLiteralExpression(supplement: NodeSupplement = NodeSupplement()): Node.Expression.NullLiteralExpression","description":"ktcodeshift.nullLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/null-literal-expression.html","searchKeys":["nullLiteralExpression","fun nullLiteralExpression(supplement: NodeSupplement = NodeSupplement()): Node.Expression.NullLiteralExpression","ktcodeshift.nullLiteralExpression"]},{"name":"fun nullableType(modifiers: List<Node.Modifier> = listOf(), innerType: Node.Type, questionMark: Node.Keyword.Question = Node.Keyword.Question(), supplement: NodeSupplement = NodeSupplement()): Node.Type.NullableType","description":"ktcodeshift.nullableType","location":"ktcodeshift-dsl/ktcodeshift/nullable-type.html","searchKeys":["nullableType","fun nullableType(modifiers: List<Node.Modifier> = listOf(), innerType: Node.Type, questionMark: Node.Keyword.Question = Node.Keyword.Question(), supplement: NodeSupplement = NodeSupplement()): Node.Type.NullableType","ktcodeshift.nullableType"]},{"name":"fun objectDeclaration(modifiers: List<Node.Modifier> = listOf(), declarationKeyword: Node.Keyword.Object = Node.Keyword.Object(), name: Node.Expression.NameExpression? = null, parents: List<Node.Declaration.ClassOrObject.ClassParent> = listOf(), body: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ObjectDeclaration","description":"ktcodeshift.objectDeclaration","location":"ktcodeshift-dsl/ktcodeshift/object-declaration.html","searchKeys":["objectDeclaration","fun objectDeclaration(modifiers: List<Node.Modifier> = listOf(), declarationKeyword: Node.Keyword.Object = Node.Keyword.Object(), name: Node.Expression.NameExpression? = null, parents: List<Node.Declaration.ClassOrObject.ClassParent> = listOf(), body: Node.Declaration.ClassOrObject.ClassBody? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ObjectDeclaration","ktcodeshift.objectDeclaration"]},{"name":"fun objectLiteralExpression(declaration: Node.Declaration.ObjectDeclaration, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ObjectLiteralExpression","description":"ktcodeshift.objectLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/object-literal-expression.html","searchKeys":["objectLiteralExpression","fun objectLiteralExpression(declaration: Node.Declaration.ObjectDeclaration, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ObjectLiteralExpression","ktcodeshift.objectLiteralExpression"]},{"name":"fun packageDirective(names: List<Node.Expression.NameExpression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.PackageDirective","description":"ktcodeshift.packageDirective","location":"ktcodeshift-dsl/ktcodeshift/package-directive.html","searchKeys":["packageDirective","fun packageDirective(names: List<Node.Expression.NameExpression> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.PackageDirective","ktcodeshift.packageDirective"]},{"name":"fun parenthesizedExpression(innerExpression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ParenthesizedExpression","description":"ktcodeshift.parenthesizedExpression","location":"ktcodeshift-dsl/ktcodeshift/parenthesized-expression.html","searchKeys":["parenthesizedExpression","fun parenthesizedExpression(innerExpression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ParenthesizedExpression","ktcodeshift.parenthesizedExpression"]},{"name":"fun parenthesizedType(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar = Node.Keyword.LPar(), innerType: Node.Type, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Type.ParenthesizedType","description":"ktcodeshift.parenthesizedType","location":"ktcodeshift-dsl/ktcodeshift/parenthesized-type.html","searchKeys":["parenthesizedType","fun parenthesizedType(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar = Node.Keyword.LPar(), innerType: Node.Type, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Type.ParenthesizedType","ktcodeshift.parenthesizedType"]},{"name":"fun parse(source: String): Node.KotlinFile","description":"ktcodeshift.Ktcodeshift.parse","location":"ktcodeshift-dsl/ktcodeshift/-ktcodeshift/parse.html","searchKeys":["parse","fun parse(source: String): Node.KotlinFile","ktcodeshift.Ktcodeshift.parse"]},{"name":"fun postfixUnaryExpression(expression: Node.Expression, operator: Node.Expression.UnaryExpression.UnaryOperator, supplement: NodeSupplement = NodeSupplement()): Node.Expression.PostfixUnaryExpression","description":"ktcodeshift.postfixUnaryExpression","location":"ktcodeshift-dsl/ktcodeshift/postfix-unary-expression.html","searchKeys":["postfixUnaryExpression","fun postfixUnaryExpression(expression: Node.Expression, operator: Node.Expression.UnaryExpression.UnaryOperator, supplement: NodeSupplement = NodeSupplement()): Node.Expression.PostfixUnaryExpression","ktcodeshift.postfixUnaryExpression"]},{"name":"fun prefixUnaryExpression(operator: Node.Expression.UnaryExpression.UnaryOperator, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.PrefixUnaryExpression","description":"ktcodeshift.prefixUnaryExpression","location":"ktcodeshift-dsl/ktcodeshift/prefix-unary-expression.html","searchKeys":["prefixUnaryExpression","fun prefixUnaryExpression(operator: Node.Expression.UnaryExpression.UnaryOperator, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.PrefixUnaryExpression","ktcodeshift.prefixUnaryExpression"]},{"name":"fun primaryConstructor(modifiers: List<Node.Modifier> = listOf(), constructorKeyword: Node.Keyword.Constructor? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassDeclaration.PrimaryConstructor","description":"ktcodeshift.primaryConstructor","location":"ktcodeshift-dsl/ktcodeshift/primary-constructor.html","searchKeys":["primaryConstructor","fun primaryConstructor(modifiers: List<Node.Modifier> = listOf(), constructorKeyword: Node.Keyword.Constructor? = null, lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassDeclaration.PrimaryConstructor","ktcodeshift.primaryConstructor"]},{"name":"fun propertyDeclaration(modifiers: List<Node.Modifier> = listOf(), valOrVarKeyword: Node.Keyword.ValOrVarKeyword, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, receiverType: Node.Type? = null, lPar: Node.Keyword.LPar? = null, variables: List<Node.Variable> = listOf(), rPar: Node.Keyword.RPar? = null, typeConstraintSet: Node.PostModifier.TypeConstraintSet? = null, initializerExpression: Node.Expression? = null, delegateExpression: Node.Expression? = null, accessors: List<Node.Declaration.PropertyDeclaration.Accessor> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration","description":"ktcodeshift.propertyDeclaration","location":"ktcodeshift-dsl/ktcodeshift/property-declaration.html","searchKeys":["propertyDeclaration","fun propertyDeclaration(modifiers: List<Node.Modifier> = listOf(), valOrVarKeyword: Node.Keyword.ValOrVarKeyword, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, receiverType: Node.Type? = null, lPar: Node.Keyword.LPar? = null, variables: List<Node.Variable> = listOf(), rPar: Node.Keyword.RPar? = null, typeConstraintSet: Node.PostModifier.TypeConstraintSet? = null, initializerExpression: Node.Expression? = null, delegateExpression: Node.Expression? = null, accessors: List<Node.Declaration.PropertyDeclaration.Accessor> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration","ktcodeshift.propertyDeclaration"]},{"name":"fun rangeWhenCondition(operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.RangeWhenCondition","description":"ktcodeshift.rangeWhenCondition","location":"ktcodeshift-dsl/ktcodeshift/range-when-condition.html","searchKeys":["rangeWhenCondition","fun rangeWhenCondition(operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.RangeWhenCondition","ktcodeshift.rangeWhenCondition"]},{"name":"fun realLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.RealLiteralExpression","description":"ktcodeshift.realLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/real-literal-expression.html","searchKeys":["realLiteralExpression","fun realLiteralExpression(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Expression.RealLiteralExpression","ktcodeshift.realLiteralExpression"]},{"name":"fun replaceWith(fn: NodeContext.(T) -> T): Node.KotlinEntry","description":"ktcodeshift.NodeCollection.replaceWith","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/replace-with.html","searchKeys":["replaceWith","fun replaceWith(fn: NodeContext.(T) -> T): Node.KotlinEntry","ktcodeshift.NodeCollection.replaceWith"]},{"name":"fun returnExpression(label: Node.Expression.NameExpression? = null, expression: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ReturnExpression","description":"ktcodeshift.returnExpression","location":"ktcodeshift-dsl/ktcodeshift/return-expression.html","searchKeys":["returnExpression","fun returnExpression(label: Node.Expression.NameExpression? = null, expression: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ReturnExpression","ktcodeshift.returnExpression"]},{"name":"fun secondaryConstructor(modifiers: List<Node.Modifier> = listOf(), constructorKeyword: Node.Keyword.Constructor = Node.Keyword.Constructor(), lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), delegationCall: Node.Expression.CallExpression? = null, block: Node.Expression.BlockExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.SecondaryConstructor","description":"ktcodeshift.secondaryConstructor","location":"ktcodeshift-dsl/ktcodeshift/secondary-constructor.html","searchKeys":["secondaryConstructor","fun secondaryConstructor(modifiers: List<Node.Modifier> = listOf(), constructorKeyword: Node.Keyword.Constructor = Node.Keyword.Constructor(), lPar: Node.Keyword.LPar = Node.Keyword.LPar(), parameters: List<Node.FunctionParameter> = listOf(), rPar: Node.Keyword.RPar = Node.Keyword.RPar(), delegationCall: Node.Expression.CallExpression? = null, block: Node.Expression.BlockExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.ClassBody.SecondaryConstructor","ktcodeshift.secondaryConstructor"]},{"name":"fun semicolon(supplement: NodeSupplement = NodeSupplement()): Node.Extra.Semicolon","description":"ktcodeshift.semicolon","location":"ktcodeshift-dsl/ktcodeshift/semicolon.html","searchKeys":["semicolon","fun semicolon(supplement: NodeSupplement = NodeSupplement()): Node.Extra.Semicolon","ktcodeshift.semicolon"]},{"name":"fun setter(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar? = null, parameter: Node.FunctionParameter? = null, rPar: Node.Keyword.RPar? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration.Setter","description":"ktcodeshift.setter","location":"ktcodeshift-dsl/ktcodeshift/setter.html","searchKeys":["setter","fun setter(modifiers: List<Node.Modifier> = listOf(), lPar: Node.Keyword.LPar? = null, parameter: Node.FunctionParameter? = null, rPar: Node.Keyword.RPar? = null, postModifiers: List<Node.PostModifier> = listOf(), body: Node.Expression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.PropertyDeclaration.Setter","ktcodeshift.setter"]},{"name":"fun simpleType(modifiers: List<Node.Modifier> = listOf(), qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier> = listOf(), name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, supplement: NodeSupplement = NodeSupplement()): Node.Type.SimpleType","description":"ktcodeshift.simpleType","location":"ktcodeshift-dsl/ktcodeshift/simple-type.html","searchKeys":["simpleType","fun simpleType(modifiers: List<Node.Modifier> = listOf(), qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier> = listOf(), name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, supplement: NodeSupplement = NodeSupplement()): Node.Type.SimpleType","ktcodeshift.simpleType"]},{"name":"fun simpleTypeQualifier(name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, supplement: NodeSupplement = NodeSupplement()): Node.Type.SimpleType.SimpleTypeQualifier","description":"ktcodeshift.simpleTypeQualifier","location":"ktcodeshift-dsl/ktcodeshift/simple-type-qualifier.html","searchKeys":["simpleTypeQualifier","fun simpleTypeQualifier(name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeArguments: List<Node.TypeArgument> = listOf(), rAngle: Node.Keyword.Greater? = null, supplement: NodeSupplement = NodeSupplement()): Node.Type.SimpleType.SimpleTypeQualifier","ktcodeshift.simpleTypeQualifier"]},{"name":"fun stringLiteralExpression(entries: List<Node.Expression.StringLiteralExpression.StringEntry> = listOf(), raw: Boolean = false, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression","description":"ktcodeshift.stringLiteralExpression","location":"ktcodeshift-dsl/ktcodeshift/string-literal-expression.html","searchKeys":["stringLiteralExpression","fun stringLiteralExpression(entries: List<Node.Expression.StringLiteralExpression.StringEntry> = listOf(), raw: Boolean = false, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression","ktcodeshift.stringLiteralExpression"]},{"name":"fun superExpression(typeArgument: Node.TypeArgument? = null, label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.SuperExpression","description":"ktcodeshift.superExpression","location":"ktcodeshift-dsl/ktcodeshift/super-expression.html","searchKeys":["superExpression","fun superExpression(typeArgument: Node.TypeArgument? = null, label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.SuperExpression","ktcodeshift.superExpression"]},{"name":"fun templateStringEntry(expression: Node.Expression, short: Boolean = false, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.TemplateStringEntry","description":"ktcodeshift.templateStringEntry","location":"ktcodeshift-dsl/ktcodeshift/template-string-entry.html","searchKeys":["templateStringEntry","fun templateStringEntry(expression: Node.Expression, short: Boolean = false, supplement: NodeSupplement = NodeSupplement()): Node.Expression.StringLiteralExpression.TemplateStringEntry","ktcodeshift.templateStringEntry"]},{"name":"fun thisExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ThisExpression","description":"ktcodeshift.thisExpression","location":"ktcodeshift-dsl/ktcodeshift/this-expression.html","searchKeys":["thisExpression","fun thisExpression(label: Node.Expression.NameExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ThisExpression","ktcodeshift.thisExpression"]},{"name":"fun throwExpression(expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ThrowExpression","description":"ktcodeshift.throwExpression","location":"ktcodeshift-dsl/ktcodeshift/throw-expression.html","searchKeys":["throwExpression","fun throwExpression(expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Expression.ThrowExpression","ktcodeshift.throwExpression"]},{"name":"fun trailingComma(supplement: NodeSupplement = NodeSupplement()): Node.Extra.TrailingComma","description":"ktcodeshift.trailingComma","location":"ktcodeshift-dsl/ktcodeshift/trailing-comma.html","searchKeys":["trailingComma","fun trailingComma(supplement: NodeSupplement = NodeSupplement()): Node.Extra.TrailingComma","ktcodeshift.trailingComma"]},{"name":"fun transform(fn: TransformFunction)","description":"ktcodeshift.transform","location":"ktcodeshift-dsl/ktcodeshift/transform.html","searchKeys":["transform","fun transform(fn: TransformFunction)","ktcodeshift.transform"]},{"name":"fun tryExpression(block: Node.Expression.BlockExpression, catchClauses: List<Node.Expression.TryExpression.CatchClause> = listOf(), finallyBlock: Node.Expression.BlockExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.TryExpression","description":"ktcodeshift.tryExpression","location":"ktcodeshift-dsl/ktcodeshift/try-expression.html","searchKeys":["tryExpression","fun tryExpression(block: Node.Expression.BlockExpression, catchClauses: List<Node.Expression.TryExpression.CatchClause> = listOf(), finallyBlock: Node.Expression.BlockExpression? = null, supplement: NodeSupplement = NodeSupplement()): Node.Expression.TryExpression","ktcodeshift.tryExpression"]},{"name":"fun typeAliasDeclaration(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.TypeAliasDeclaration","description":"ktcodeshift.typeAliasDeclaration","location":"ktcodeshift-dsl/ktcodeshift/type-alias-declaration.html","searchKeys":["typeAliasDeclaration","fun typeAliasDeclaration(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less? = null, typeParameters: List<Node.TypeParameter> = listOf(), rAngle: Node.Keyword.Greater? = null, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.TypeAliasDeclaration","ktcodeshift.typeAliasDeclaration"]},{"name":"fun typeArgument(modifiers: List<Node.Modifier> = listOf(), type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.TypeArgument","description":"ktcodeshift.typeArgument","location":"ktcodeshift-dsl/ktcodeshift/type-argument.html","searchKeys":["typeArgument","fun typeArgument(modifiers: List<Node.Modifier> = listOf(), type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.TypeArgument","ktcodeshift.typeArgument"]},{"name":"fun typeClassParent(type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.TypeClassParent","description":"ktcodeshift.typeClassParent","location":"ktcodeshift-dsl/ktcodeshift/type-class-parent.html","searchKeys":["typeClassParent","fun typeClassParent(type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Declaration.ClassOrObject.TypeClassParent","ktcodeshift.typeClassParent"]},{"name":"fun typeConstraint(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), name: Node.Expression.NameExpression, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.TypeConstraintSet.TypeConstraint","description":"ktcodeshift.typeConstraint","location":"ktcodeshift-dsl/ktcodeshift/type-constraint.html","searchKeys":["typeConstraint","fun typeConstraint(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), name: Node.Expression.NameExpression, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.TypeConstraintSet.TypeConstraint","ktcodeshift.typeConstraint"]},{"name":"fun typeConstraintSet(constraints: List<Node.PostModifier.TypeConstraintSet.TypeConstraint> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.TypeConstraintSet","description":"ktcodeshift.typeConstraintSet","location":"ktcodeshift-dsl/ktcodeshift/type-constraint-set.html","searchKeys":["typeConstraintSet","fun typeConstraintSet(constraints: List<Node.PostModifier.TypeConstraintSet.TypeConstraint> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.PostModifier.TypeConstraintSet","ktcodeshift.typeConstraintSet"]},{"name":"fun typeParameter(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, type: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.TypeParameter","description":"ktcodeshift.typeParameter","location":"ktcodeshift-dsl/ktcodeshift/type-parameter.html","searchKeys":["typeParameter","fun typeParameter(modifiers: List<Node.Modifier> = listOf(), name: Node.Expression.NameExpression, type: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.TypeParameter","ktcodeshift.typeParameter"]},{"name":"fun typeWhenCondition(operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.TypeWhenCondition","description":"ktcodeshift.typeWhenCondition","location":"ktcodeshift-dsl/ktcodeshift/type-when-condition.html","searchKeys":["typeWhenCondition","fun typeWhenCondition(operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, type: Node.Type, supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.TypeWhenCondition","ktcodeshift.typeWhenCondition"]},{"name":"fun valueArgument(name: Node.Expression.NameExpression? = null, spreadOperator: Node.Keyword.Asterisk? = null, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.ValueArgument","description":"ktcodeshift.valueArgument","location":"ktcodeshift-dsl/ktcodeshift/value-argument.html","searchKeys":["valueArgument","fun valueArgument(name: Node.Expression.NameExpression? = null, spreadOperator: Node.Keyword.Asterisk? = null, expression: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.ValueArgument","ktcodeshift.valueArgument"]},{"name":"fun variable(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), name: Node.Expression.NameExpression, type: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.Variable","description":"ktcodeshift.variable","location":"ktcodeshift-dsl/ktcodeshift/variable.html","searchKeys":["variable","fun variable(annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), name: Node.Expression.NameExpression, type: Node.Type? = null, supplement: NodeSupplement = NodeSupplement()): Node.Variable","ktcodeshift.variable"]},{"name":"fun whenExpression(whenKeyword: Node.Keyword.When = Node.Keyword.When(), subject: Node.Expression.WhenExpression.WhenSubject? = null, branches: List<Node.Expression.WhenExpression.WhenBranch> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression","description":"ktcodeshift.whenExpression","location":"ktcodeshift-dsl/ktcodeshift/when-expression.html","searchKeys":["whenExpression","fun whenExpression(whenKeyword: Node.Keyword.When = Node.Keyword.When(), subject: Node.Expression.WhenExpression.WhenSubject? = null, branches: List<Node.Expression.WhenExpression.WhenBranch> = listOf(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression","ktcodeshift.whenExpression"]},{"name":"fun whenSubject(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), variable: Node.Variable? = null, expression: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.WhenSubject","description":"ktcodeshift.whenSubject","location":"ktcodeshift-dsl/ktcodeshift/when-subject.html","searchKeys":["whenSubject","fun whenSubject(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), annotationSets: List<Node.Modifier.AnnotationSet> = listOf(), variable: Node.Variable? = null, expression: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), supplement: NodeSupplement = NodeSupplement()): Node.Expression.WhenExpression.WhenSubject","ktcodeshift.whenSubject"]},{"name":"fun whileStatement(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Statement.WhileStatement","description":"ktcodeshift.whileStatement","location":"ktcodeshift-dsl/ktcodeshift/while-statement.html","searchKeys":["whileStatement","fun whileStatement(lPar: Node.Keyword.LPar = Node.Keyword.LPar(), condition: Node.Expression, rPar: Node.Keyword.RPar = Node.Keyword.RPar(), body: Node.Expression, supplement: NodeSupplement = NodeSupplement()): Node.Statement.WhileStatement","ktcodeshift.whileStatement"]},{"name":"fun whitespace(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Extra.Whitespace","description":"ktcodeshift.whitespace","location":"ktcodeshift-dsl/ktcodeshift/whitespace.html","searchKeys":["whitespace","fun whitespace(text: String, supplement: NodeSupplement = NodeSupplement()): Node.Extra.Whitespace","ktcodeshift.whitespace"]},{"name":"inline fun <T : Node> Node.KotlinEntry.find(): NodeCollection<T>","description":"ktcodeshift.find","location":"ktcodeshift-dsl/ktcodeshift/find.html","searchKeys":["find","inline fun <T : Node> Node.KotlinEntry.find(): NodeCollection<T>","ktcodeshift.find"]},{"name":"interface FileInfo","description":"ktcodeshift.FileInfo","location":"ktcodeshift-dsl/ktcodeshift/-file-info/index.html","searchKeys":["FileInfo","interface FileInfo","ktcodeshift.FileInfo"]},{"name":"object Ktcodeshift","description":"ktcodeshift.Ktcodeshift","location":"ktcodeshift-dsl/ktcodeshift/-ktcodeshift/index.html","searchKeys":["Ktcodeshift","object Ktcodeshift","ktcodeshift.Ktcodeshift"]},{"name":"object TransformScriptCompilationConfiguration : ScriptCompilationConfiguration","description":"ktcodeshift.script.TransformScriptCompilationConfiguration","location":"ktcodeshift-dsl/ktcodeshift.script/-transform-script-compilation-configuration/index.html","searchKeys":["TransformScriptCompilationConfiguration","object TransformScriptCompilationConfiguration : ScriptCompilationConfiguration","ktcodeshift.script.TransformScriptCompilationConfiguration"]},{"name":"object TransformScriptEvaluationConfiguration : ScriptEvaluationConfiguration","description":"ktcodeshift.script.TransformScriptEvaluationConfiguration","location":"ktcodeshift-dsl/ktcodeshift.script/-transform-script-evaluation-configuration/index.html","searchKeys":["TransformScriptEvaluationConfiguration","object TransformScriptEvaluationConfiguration : ScriptEvaluationConfiguration","ktcodeshift.script.TransformScriptEvaluationConfiguration"]},{"name":"val Node.Declaration.ClassDeclaration.isDataClass: Boolean","description":"ktcodeshift.isDataClass","location":"ktcodeshift-dsl/ktcodeshift/is-data-class.html","searchKeys":["isDataClass","val Node.Declaration.ClassDeclaration.isDataClass: Boolean","ktcodeshift.isDataClass"]},{"name":"val Node.WithModifiers.annotations: List<Node.Modifier.AnnotationSet.Annotation>","description":"ktcodeshift.annotations","location":"ktcodeshift-dsl/ktcodeshift/annotations.html","searchKeys":["annotations","val Node.WithModifiers.annotations: List<Node.Modifier.AnnotationSet.Annotation>","ktcodeshift.annotations"]},{"name":"val Node.WithModifiers.keywordModifiers: List<Node.Modifier.KeywordModifier>","description":"ktcodeshift.keywordModifiers","location":"ktcodeshift-dsl/ktcodeshift/keyword-modifiers.html","searchKeys":["keywordModifiers","val Node.WithModifiers.keywordModifiers: List<Node.Modifier.KeywordModifier>","ktcodeshift.keywordModifiers"]},{"name":"val ancestors: Sequence<Node>","description":"ktcodeshift.NodeContext.ancestors","location":"ktcodeshift-dsl/ktcodeshift/-node-context/ancestors.html","searchKeys":["ancestors","val ancestors: Sequence<Node>","ktcodeshift.NodeContext.ancestors"]},{"name":"val nodePaths: List<NodePath<T>>","description":"ktcodeshift.NodeCollection.nodePaths","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/node-paths.html","searchKeys":["nodePaths","val nodePaths: List<NodePath<T>>","ktcodeshift.NodeCollection.nodePaths"]},{"name":"val parent: Node?","description":"ktcodeshift.NodeContext.parent","location":"ktcodeshift-dsl/ktcodeshift/-node-context/parent.html","searchKeys":["parent","val parent: Node?","ktcodeshift.NodeContext.parent"]},{"name":"val rootNode: Node.KotlinEntry","description":"ktcodeshift.NodeCollection.rootNode","location":"ktcodeshift-dsl/ktcodeshift/-node-collection/root-node.html","searchKeys":["rootNode","val rootNode: Node.KotlinEntry","ktcodeshift.NodeCollection.rootNode"]},{"name":"var transformFunction: TransformFunction?","description":"ktcodeshift.transformFunction","location":"ktcodeshift-dsl/ktcodeshift/transform-function.html","searchKeys":["transformFunction","var transformFunction: TransformFunction?","ktcodeshift.transformFunction"]}]